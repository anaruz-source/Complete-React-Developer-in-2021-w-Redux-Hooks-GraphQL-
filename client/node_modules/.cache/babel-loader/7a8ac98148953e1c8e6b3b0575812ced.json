{"ast":null,"code":"var _jsxFileName = \"/home/anaruz/www/Complete-React-Developer-in-2021-w-Redux-Hooks-GraphQL-/client/src/components/sign-in/sign-in.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport { SignInContainer, TitleContainer, ButtonsContainer } from './sign-in.styles';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  _s();\n\n  const [userCredentials, setUserCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(SignInContainer, {\n    children: [/*#__PURE__*/_jsxDEV(TitleContainer, {\n      children: \"I already have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign in with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"email\",\n        type: \"email\",\n        label: \"Email\",\n        value: email,\n        handleChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"password\",\n        type: \"password\",\n        label: \"Password\",\n        value: password,\n        handleChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(ButtonsContainer, {\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \"SIGN IN \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"button\",\n          onClick: googleSignInStart,\n          isGoogleSignIn: true,\n          children: [' ', \"SIGN IN WITH GOOGLE\", ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 13\n  }, this);\n};\n\n_s(SignIn, \"rxgBdG0gdd6BqPzWniX4ed7Ad2I=\");\n\n_c = SignIn;\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/home/anaruz/www/Complete-React-Developer-in-2021-w-Redux-Hooks-GraphQL-/client/src/components/sign-in/sign-in.component.jsx"],"names":["React","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignInContainer","TitleContainer","ButtonsContainer","connect","useState","SignIn","userCredentials","setUserCredentials","email","password","handleSubmit","e","preventDefault","handleChange","name","value","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\n\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\n\nimport {googleSignInStart, emailSignInStart} from '../../redux/user/user.actions'\n\nimport {SignInContainer, TitleContainer, ButtonsContainer} from './sign-in.styles'\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\n\nconst  SignIn =({emailSignInStart, googleSignInStart}) =>{\n\n     const [userCredentials, setUserCredentials] = useState({email:'', password:''})\n\n     const {email, password} = userCredentials;\n   \n  const  handleSubmit = async (e) =>{\n\n        e.preventDefault();\n      \n\n        emailSignInStart(email, password);\n\n    }\n  const   handleChange = (e) => {\n\n        const {name, value} = e.target;\n\n        setUserCredentials({...userCredentials, [name]:value})\n    }\n    \n\n   \n        return(\n            <SignInContainer>\n               <TitleContainer>I already have an account</TitleContainer>\n               <span>Sign in with your email and password</span>\n               <form onSubmit={handleSubmit}>\n                   <FormInput\n                   name = 'email'\n                   type='email'\n                   label = 'Email'\n                   value={email}\n                   handleChange =  {handleChange}\n                   required  />\n                   <FormInput\n                    name = 'password'\n                    type='password'\n                    label ='Password'\n                    value={password}\n                    handleChange =  {handleChange}\n                    required  />\n                    <ButtonsContainer>\n                        <CustomButton type='submit'>SIGN IN </CustomButton>\n                        <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>{' '}SIGN IN WITH GOOGLE{' '}</CustomButton>\n                    </ButtonsContainer>\n               </form>\n            </SignInContainer>\n        )\n\n    \n}\n\n\nconst mapDispatchToProps = dispatch =>({\n\n    googleSignInStart: () => dispatch(googleSignInStart()),\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({email, password}))\n})\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}