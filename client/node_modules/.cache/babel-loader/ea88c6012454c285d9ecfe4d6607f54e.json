{"ast":null,"code":"import { collection, getDocs, query } from \"firebase/firestore\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport shopActionTypes from \"./shop.types\";\nexport const fetchCollectionsStart = () => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errMessage => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errMessage\n});\nexport const fetchCollectionsStartAsync = () => async dispatch => {\n  const collectionReference = collection(firestore, 'collections');\n  dispatch(fetchCollectionsStart());\n\n  try {\n    const snap = await getDocs(query(collectionReference));\n    const collectionsMap = convertCollectionsSnapshotToMap(snap);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    dispatch(fetchCollectionsFailure(error.message));\n  }\n};","map":{"version":3,"sources":["/home/anaruz/www/Complete-React-Developer-in-2021-w-Redux-Hooks-GraphQL-/client/src/redux/shop/shop.actions.js"],"names":["collection","getDocs","query","firestore","convertCollectionsSnapshotToMap","shopActionTypes","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionReference","snap","error","message"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,OAArB,EAA8BC,KAA9B,QAA2C,oBAA3C;AAGA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAKA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAExCC,EAAAA,IAAI,EAAEF,eAAe,CAACG;AAFkB,CAAP,CAA9B;AAKP,OAAO,MAAMC,uBAAuB,GAAIC,cAAD,KAAqB;AAExDH,EAAAA,IAAI,EAAEF,eAAe,CAACM,yBAFkC;AAGxDC,EAAAA,OAAO,EAAEF;AAH+C,CAArB,CAAhC;AAOP,OAAO,MAAMG,uBAAuB,GAAIC,UAAD,KAAiB;AAEpDP,EAAAA,IAAI,EAAEF,eAAe,CAACU,yBAF8B;AAGpDH,EAAAA,OAAO,EAAEE;AAH2C,CAAjB,CAAhC;AAMP,OAAO,MAAME,0BAA0B,GAAI,MAEvC,MAAMC,QAAN,IAAkB;AAId,QAAMC,mBAAmB,GAAGlB,UAAU,CAACG,SAAD,EAAY,aAAZ,CAAtC;AAEAc,EAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;;AAEA,MAAI;AAEA,UAAMa,IAAI,GAAG,MAAMlB,OAAO,CAACC,KAAK,CAACgB,mBAAD,CAAN,CAA1B;AAEA,UAAMR,cAAc,GAAIN,+BAA+B,CAACe,IAAD,CAAvD;AAEAF,IAAAA,QAAQ,CAACR,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AAEH,GARD,CAQE,OAAMU,KAAN,EAAa;AAEbH,IAAAA,QAAQ,CAACJ,uBAAuB,CAACO,KAAK,CAACC,OAAP,CAAxB,CAAR;AACD;AAKJ,CA1BE","sourcesContent":["import { collection, getDocs, query } from \"firebase/firestore\";\n\n\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\n\n\n\n\nimport shopActionTypes from \"./shop.types\";\n\nexport const fetchCollectionsStart = () => ({\n\n    type: shopActionTypes.FETCH_COLLECTIONS_START,\n})\n\nexport const fetchCollectionsSuccess = (collectionsMap) => ({\n\n    type: shopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n    payload: collectionsMap\n})\n\n\nexport const fetchCollectionsFailure = (errMessage) => ({\n\n    type: shopActionTypes.FETCH_COLLECTIONS_FAILURE,\n    payload: errMessage\n})\n\nexport const fetchCollectionsStartAsync =  () => (\n\n    async dispatch => {\n\n\n\n        const collectionReference = collection(firestore, 'collections')\n\n        dispatch(fetchCollectionsStart())\n\n        try {\n\n            const snap = await getDocs(query(collectionReference))\n                \n            const collectionsMap =  convertCollectionsSnapshotToMap(snap)\n                   \n            dispatch(fetchCollectionsSuccess(collectionsMap))\n\n        } catch(error) {\n\n          dispatch(fetchCollectionsFailure(error.message))\n        }\n\n\n\n            \n    })\n"]},"metadata":{},"sourceType":"module"}