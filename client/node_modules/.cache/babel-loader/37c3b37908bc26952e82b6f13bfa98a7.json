{"ast":null,"code":"import { call, all, put, takeLatest } from 'redux-saga/effects';\nimport { getDocs, collection, query } from 'firebase/firestore';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport shopActionTypes from './shop.types';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nexport function* fetchCollectionsStartAsync() {\n  yield console.log('I am fired');\n  const collectionReference = collection(firestore, 'collections');\n\n  try {\n    const snap = yield getDocs(query(collectionReference));\n    console.log(snap);\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snap);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* onFetchCollectionsStart() {\n  yield takeLatest(shopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsStartAsync);\n}\nexport function* shopSagas() {\n  yield all([call(onFetchCollectionsStart)]);\n}","map":{"version":3,"sources":["/home/anaruz/www/Complete-React-Developer-in-2021-w-Redux-Hooks-GraphQL-/client/src/redux/shop/shop.sagas.js"],"names":["call","all","put","takeLatest","getDocs","collection","query","firestore","convertCollectionsSnapshotToMap","shopActionTypes","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsStartAsync","console","log","collectionReference","snap","collectionsMap","error","message","onFetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAASA,IAAT,EAAcC,GAAd,EAAmBC,GAAnB,EAAwBC,UAAxB,QAAyC,oBAAzC;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,KAA9B,QAA2C,oBAA3C;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA0D,+BAA1D;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,gBAAjE;AAGA,OAAO,UAAUC,0BAAV,GAAwC;AAE3C,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AAGA,QAAMC,mBAAmB,GAAGV,UAAU,CAACE,SAAD,EAAY,aAAZ,CAAtC;;AAIA,MAAI;AAEA,UAAMS,IAAI,GAAG,MAAMZ,OAAO,CAACE,KAAK,CAACS,mBAAD,CAAN,CAA1B;AAEAF,IAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AAEA,UAAMC,cAAc,GAAI,MAAMjB,IAAI,CAACQ,+BAAD,EAAkCQ,IAAlC,CAAlC;AAEA,UAAMd,GAAG,CAACQ,uBAAuB,CAACO,cAAD,CAAxB,CAAT;AAEH,GAVD,CAUE,OAAMC,KAAN,EAAa;AAEX,UAAMhB,GAAG,CAACS,uBAAuB,CAACO,KAAK,CAACC,OAAP,CAAxB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,uBAAV,GAAoC;AAGvC,QAAMjB,UAAU,CACZM,eAAe,CAACY,uBADJ,EAEZT,0BAFY,CAAhB;AAIH;AAGD,OAAO,UAAUU,SAAV,GAAqB;AAE1B,QAAOrB,GAAG,CAAC,CAACD,IAAI,CAACoB,uBAAD,CAAL,CAAD,CAAV;AACD","sourcesContent":["import { call,all, put, takeLatest} from 'redux-saga/effects'\nimport { getDocs, collection, query } from 'firebase/firestore'\n\nimport { firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils'\nimport shopActionTypes from './shop.types'\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions'\n\n\nexport function* fetchCollectionsStartAsync () {\n\n    yield console.log('I am fired')\n\n\n    const collectionReference = collection(firestore, 'collections')\n\n    \n\n    try {\n\n        const snap = yield getDocs(query(collectionReference))\n\n        console.log(snap)\n            \n        const collectionsMap =  yield call(convertCollectionsSnapshotToMap, snap)\n               \n        yield put(fetchCollectionsSuccess(collectionsMap))\n\n    } catch(error) {\n\n        yield put(fetchCollectionsFailure(error.message))\n    }\n}\n\nexport function* onFetchCollectionsStart() {\n\n\n    yield takeLatest(\n        shopActionTypes.FETCH_COLLECTIONS_START,\n        fetchCollectionsStartAsync\n        )\n}\n\n\nexport function* shopSagas(){\n\n  yield  all([call(onFetchCollectionsStart)])\n}"]},"metadata":{},"sourceType":"module"}