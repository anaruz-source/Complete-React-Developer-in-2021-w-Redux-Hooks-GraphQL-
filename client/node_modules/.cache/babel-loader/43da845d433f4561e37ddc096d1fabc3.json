{"ast":null,"code":"var _jsxFileName = \"/home/anaruz/www/Complete-React-Developer-in-2021-w-Redux-Hooks-GraphQL-/client/src/components/sign-up/sign-up.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport CustomButton from '../custom-button/custom-button.component';\nimport FormInput from '../form-input/form-input.component';\nimport { SignUpContainer, TitleContainer } from './sign-up.styles';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  _s();\n\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password != confirmPassword) {\n      console.log('passwords don\\'t match!, retry again');\n    }\n\n    signUpStart({\n      email,\n      password,\n      displayName\n    });\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(SignUpContainer, {\n    children: [/*#__PURE__*/_jsxDEV(TitleContainer, {\n      children: \" I do not have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign up with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        name: \"displayName\",\n        value: displayName,\n        onChange: handleChange,\n        placeholer: \"Display Name\",\n        label: \"Display Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        onChange: handleChange,\n        placeholer: \"Email\",\n        label: \"Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"password\",\n        value: password,\n        onChange: handleChange,\n        placeholer: \"Password\",\n        label: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"confirmPassword\",\n        value: confirmPassword,\n        onChange: handleChange,\n        placeholer: \"Confirm Password\",\n        label: \"Confirm Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        type: \"submit\",\n        children: \"SIGN UP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 13\n  }, this);\n};\n\n_s(SignUp, \"yd862GmwMpcC2IF2D6lb3Tj/syY=\");\n\n_c = SignUp;\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/home/anaruz/www/Complete-React-Developer-in-2021-w-Redux-Hooks-GraphQL-/client/src/components/sign-up/sign-up.component.jsx"],"names":["React","CustomButton","FormInput","SignUpContainer","TitleContainer","signUpStart","connect","useState","SignUp","userCredentials","setUserCredentials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","console","log","handleChange","e","name","value","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\n\n\nimport CustomButton from '../custom-button/custom-button.component';\nimport FormInput from '../form-input/form-input.component';\n\n\nimport { SignUpContainer, TitleContainer } from './sign-up.styles';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\n\n\n\nconst SignUp = ({signUpStart}) =>{\n\n\n   const [userCredentials, setUserCredentials] = useState( {\n\n        displayName:'',\n        email: '',\n        password: '',\n        confirmPassword: ''\n    })\n\n\n    const {displayName, email, password, confirmPassword} = userCredentials\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n       \n        if(password != confirmPassword) {\n\n            console.log('passwords don\\'t match!, retry again');\n        }\n\n      signUpStart({email, password, displayName})\n    }\n\n    const handleChange = e =>{\n\n        const {name, value} = e.target;\n\n        setUserCredentials({...userCredentials, [name]:value});\n    }\n    \n\n        return (\n\n            <SignUpContainer>\n\n                <TitleContainer> I do not have an account</TitleContainer>\n                <span>Sign up with your email and password</span>\n\n                <form onSubmit= {handleSubmit}>\n                    <FormInput\n                    type='text'\n                    name='displayName'\n                    value={displayName}\n                    onChange ={ handleChange}\n                    placeholer = 'Display Name'\n                    label = 'Display Name'\n                    required\n                     />\n\n                   <FormInput\n                    type='email'\n                    name='email'\n                    value={email}\n                    onChange ={ handleChange}\n                    placeholer = 'Email'\n                    label = 'Email'\n                    required\n                     />\n                     <FormInput\n                    type='password'\n                    name='password'\n                    value={password}\n                    onChange ={ handleChange}\n                    placeholer = 'Password'\n                    label = 'Password'\n                    required\n                     />\n\n                    <FormInput\n                    type='password'\n                    name='confirmPassword'\n                    value={confirmPassword}\n                    onChange ={ handleChange}\n                    placeholer = 'Confirm Password'\n                    label = 'Confirm Password'\n                    required\n                     />\n\n                     <CustomButton type='submit'>SIGN UP</CustomButton>\n\n                </form>\n\n            </SignUpContainer>\n        )\n    \n}\n\n\nconst mapDispatchToProps = dispatch => ({\n\n    signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n})\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}